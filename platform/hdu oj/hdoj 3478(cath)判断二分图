#include<iostream>
#include<cstring>
#include<cstdio>
#include<vector>
#include<string>
#include<cmath>
#include<queue>
using namespace std;
const int  N=100009;
int f[N];
bool flag;
vector<int> p[N];
void dfs(int x,int color)
{
    f[x]=color;
    for(int i=0;i<p[x].size();i++)
    {
        if(!f[p[x][i]])
        {
            dfs(p[x][i],-color);
            if(flag)
                return;
        }
        else
            if(f[p[x][i]]==color)
            {
                flag=true;
                return;
            }
    }
}

int main()
{
    int T,i,n,m,begin,x,y,cases=1;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d%d",&n,&m,&begin);
        for(i=0;i<n;i++)
            p[i].clear();
        for(i=0;i<m;i++)
        {
            scanf("%d%d",&x,&y);
            p[x].push_back(y);
            p[y].push_back(x);
        }
        memset(f,0,sizeof(f));
        flag=false;
        dfs(begin,1);

        if(flag)
            printf("Case %d: YES\n",cases++);
        else
            printf("Case %d: NO\n",cases++);

    }
    return 0;
}
