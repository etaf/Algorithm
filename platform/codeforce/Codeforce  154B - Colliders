/*
 * codeforces 154B - Colliders
 * 题意：
 * + i 表示向集合里添加i
 * - i 从集合里删除i
 * 集合内的元素必须两两互质。
 * i的范围为 1-n，共m次操作
 * 解：
 * 先暴力筛素数的方法得到prime[i],prime[i]表示i的最小质因子。
 * Set[i] ，i为素数，Set[i]这个集合存储素因子包含i的值。每次插入删除为O（n）
 * 
 */


#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
using namespace std;
const int N = 100001;
int in[N];
int prime[N], NT[10000], len;
set<int> S[N];

int main() {

    freopen("in", "r", stdin);

    int n, m, i, j;
    char c;
    int x, tmp;
    for (i = 2; i < N; ++i) {
        if (!prime[i]) {
            prime[i] = i;
            for (j = i + i; j < N; j += i) {
                if (!prime[j])prime[j] = i;
            }
        }
    }
    prime[1] = 1;
    scanf("%d%d", &n, &m);
    while (m--) {

        scanf(" %c %d", &c, &x);
        len = 0;
        for (int t = x; t != 1;) {

            NT[len++] = prime[t];
            tmp = prime[t];
            t /= prime[t];
            while (tmp == prime[t])
                t /= prime[t];
        }

        if (c == '-') {
            if (in[x]) {
                printf("Success\n");
                in[x] = 0;
                for (i = 0; i < len; ++i) {
                    S[NT[i]].erase(x);
                }
            } else {
                printf("Already off\n");
            }
        } else {

            if (in[x]) {
                printf("Already on\n");
                continue;
            } else {

                for (i = 0; i < len; ++i) {
                    if (!S[NT[i]].empty()) {
                  
                        break;
                    }
                }
                if (i < len) {
                    printf("Conflict with %d\n", *(S[NT[i]].begin()));
                } else {
                    for (i = 0; i < len; ++i) {
                        S[NT[i]].insert(x);
                    }
                    in[x] = 1;
                    printf("Success\n");
                }

            }
        }
    }
}


