#include<iostream>
#include<cstring>
#include<cstdio>
#include<cmath>
using namespace std;
const int N=100010;
typedef long long ll;
const int M=5000001;
int prime[M],num;
bool isprime[M];
int n,cnt[N],a[N],f[M];
void getprime()
{
    memset(isprime,0,sizeof(isprime));
    int i,j;
    num=0;
     for(i=2;i<M;++i)
    {
        if(!isprime[i])
        {
            prime[num++]=i;
            for(j=i+i;j<M;j+=i)
                 isprime[j]=1;
        }
    }
}
void init()
{
    memset(f,0,sizeof(f));
    ll i,j,k,MM=5000001LL;
    for(i=0;i<num;++i)
    {
        for(j=prime[i];j<MM;j*=prime[i])
            for(k=j;k<MM;k+=j)
            {
                ++f[k];
            }
    }
}
int judge1(int x)
{
    int i;
    for( i=0;i<n;++i)
    {
        if(cnt[i]>= (cnt[i]^x) )
            return i+1;
    }
}
int judge(int x)
{
    int one,i=0;
    while(x>0)
    {
        if(x%2)
            one=i;
        x/=2;
        ++i;
    }
    for(i=0;i<n;++i)
    {
        if(cnt[i]>=( 1<<one))
            return i+1;
    }
}

int main()
{
    freopen("in","r",stdin);
    getprime();
    init();
    int cases=1,i,ans;
    bool flag;
    while(scanf("%d",&n)!=EOF)
    {
        ans=0;
        flag=1;
        for(i=0;i<n;++i)
        {
            scanf("%d",a+i);
            if(a[i]>1)
                flag=0;
            cnt[i]=f[a[i]];
         //   cout<<cnt[i]<<" ";
            ans^=cnt[i];
        }
       /* if(flag)
        {
            printf("Test #%d: Alice 1\n",cases++);
            continue;
        }
        */
        if(ans==0)
            printf("Test #%d: Bob\n",cases++);
        else
        {
            int index=judge1(ans);
            printf("Test #%d: Alice %d\n",cases++,index);
        }
    }
    return 0;
}
